<UserControl x:Class="FullScratchCore.Views.CustomTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mt="clr-namespace:FullScratchCore.Models.Selector"
             xmlns:vm="clr-namespace:FullScratchCore.ViewModels"
             xmlns:f="clr-namespace:FullScratchCore"
             xmlns:ae="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:fc="clr-namespace:FullScratchCore"
             xmlns:local="clr-namespace:FullScratchCore.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.DataContext>
        <vm:CustomTabViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <!--  テキスト表示用テンプレート  -->
            <DataTemplate x:Key="TextTemplate">
                <fc:FullScratchEditor Text="{Binding Contents,UpdateSourceTrigger=PropertyChanged}"/>
                
                <!-- IsAsync=TrueはupdateSourceTriggerをpropertychangedに設定してるとちらつく-->
                    <!--<TextBox x:Name="TextBoxControl" Grid.Column="{Binding ElementName=TextLine,Path=IsVisible}" Grid.ColumnSpan="2" Text="{Binding Contents, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"-->
                         <!--FontSize="20" Padding="10" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AcceptsReturn="True" BorderThickness="0" />-->
            </DataTemplate>

            <!--  CSV表示用テンプレート  -->
            <DataTemplate x:Key="CSVTemplate">
                <DataGrid ItemsSource="{Binding DataTable, Mode=TwoWay, IsAsync=False}" AutoGenerateColumns="True"
                          VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsVirtualizingWhenGrouping="False"
                          EnableRowVirtualization="True" CanUserReorderColumns="True" HorizontalGridLinesBrush="SkyBlue"  VerticalGridLinesBrush="DeepSkyBlue" >
                    <DataGrid.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </DataGrid.ItemsPanel>
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="Content" Value="{Binding UpdateSourceTrigger=PropertyChanged}"/>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.RowHeaderStyle>
                        <Style TargetType="{x:Type DataGridRowHeader}">
                            <Setter Property="Content" Value="{Binding [0]}"/>
                        </Style>
                    </DataGrid.RowHeaderStyle>
                </DataGrid>
            </DataTemplate>

            <!-- Image表示用テンプレート-->
            <DataTemplate x:Key="ImageTemplate">
                <Image Source="{Binding Image}"/>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <TabControl x:Name="Tab" ItemsSource="{Binding Tabs, Mode=Twoway,UpdateSourceTrigger=PropertyChanged}" 
                    FontSize="20" VirtualizingPanel.VirtualizationMode="Recycling" SelectedItem="{Binding SelectedTabItem}">
                <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Header}">
                        <Button Content="×" Command="{Binding ExecuteCmd}" CommandParameter="{Binding TabID}" BorderThickness="0" Background="Transparent"/>
                    </TextBlock>
                </DataTemplate>
            </TabControl.ItemTemplate>
            <TabControl.ContentTemplateSelector>
                <mt:TabItemTemplateSelector TextBoxTabTemplate="{StaticResource TextTemplate}"
                                                GridViewTabTemplate="{StaticResource CSVTemplate}"
                                                ImageTabTemplate="{StaticResource ImageTemplate}"/>
            </TabControl.ContentTemplateSelector>
        </TabControl>
    </Grid>

</UserControl>
